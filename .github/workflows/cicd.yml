# Bank Frontend CI/CD
# This GitHub Actions workflow builds a Docker image for the bank frontend application, pushes it to
name: Bank Frontend CI/CD

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  AWS_ACCOUNT_ID: 872878741416
  ECR_REPO: bank-frontend
  ECR_REGISTRY: 872878741416.dkr.ecr.us-east-1.amazonaws.com/bank-frontend
  IMAGE_TAG: ${{ github.run_number }}

jobs:
  build_and_push:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install AWS CLI if not already available
        run: |
          if ! command -v aws &> /dev/null; then
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
          fi
          aws --version

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY

      - name: Build Docker image
        run: docker build -t bank-app-frontend .

      - name: Tag Docker image
        run: docker tag bank-app-frontend $ECR_REGISTRY/$ECR_REPO:${IMAGE_TAG}

      - name: Push Docker image to ECR
        run: docker push $ECR_REGISTRY/$ECR_REPO:${IMAGE_TAG}

      - name: Clean up local Docker images
        run: |
          docker rmi bank-app-frontend || true
          docker rmi $ECR_REGISTRY/$ECR_REPO:${IMAGE_TAG} || true

  update_k8s_manifest:
    runs-on: self-hosted
    needs: build_and_push

    steps:
      - name: Clone Kubernetes manifest repo
        run: |
          git clone https://${{ secrets.GIT_USERNAME }}:${{ secrets.GIT_PASSWORD }}@github.com/Cloudforge-11/kubernetes-manifest.git

      - name: Update image in frontend manifest and push
        working-directory: kubernetes-manifest
        env:
          ECR_REGISTRY: ${{ env.ECR_REGISTRY }}
          ECR_REPO: ${{ env.ECR_REPO }}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: |
          git config user.email "arthurqueenie1@gmail.com"
          git config user.name "queeniearthur"

          echo "Updating frontend.yaml image to: ${ECR_REGISTRY}/${ECR_REPO}:${IMAGE_TAG}"
          sed -i "s|${ECR_REGISTRY}/${ECR_REPO}:.*|${ECR_REGISTRY}/${ECR_REPO}:${IMAGE_TAG}|g" ./bank-project/frontend.yaml

          grep "${ECR_REGISTRY}/${ECR_REPO}:${IMAGE_TAG}" ./bank-project/frontend.yaml || true

          git add ./bank-project/frontend.yaml
          git commit -m "Update frontend image to version ${IMAGE_TAG}" || echo "No changes to commit"
          git push origin mainname: Bank Frontend CI/CD

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  IMAGE_TAG: ${{ github.run_number }}
  ECR_REGISTRY: 872878741416.dkr.ecr.us-east-1.amazonaws.com
  ECR_REPO: bank-frontend

jobs:
  build_and_push:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install AWS CLI if not already available
        run: |
          if ! command -v aws &> /dev/null; then
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
          fi
          aws --version

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | \
          docker login --username AWS --password-stdin $ECR_REGISTRY

      - name: Build Docker image
        run: docker build -t bank-app-frontend .

      - name: Debug ECR values
        run: |
          echo "üß™ ECR_REGISTRY: $ECR_REGISTRY"
          echo "üì¶ ECR_REPO: $ECR_REPO"
          echo "üè∑Ô∏è IMAGE_TAG: $IMAGE_TAG"

      - name: Tag Docker image
        run: docker tag bank-app-frontend $ECR_REGISTRY/$ECR_REPO:$IMAGE_TAG

      - name: Push Docker image to ECR
        run: docker push $ECR_REGISTRY/$ECR_REPO:$IMAGE_TAG

      - name: Clean up local Docker images
        run: |
          docker rmi bank-app-frontend || true
          docker rmi $ECR_REGISTRY/$ECR_REPO:$IMAGE_TAG || true

  update_k8s_manifest:
    runs-on: self-hosted
    needs: build_and_push

    steps:
      - name: Clone Kubernetes manifest repo
        run: |
          git clone https://${{ secrets.GIT_USERNAME }}:${{ secrets.GIT_PASSWORD }}@github.com/Cloudforge-11/kubernetes-manifest.git

      - name: Update image in frontend manifest and push
        working-directory: kubernetes-manifest
        env:
          ECR_REGISTRY: ${{ env.ECR_REGISTRY }}
          ECR_REPO: ${{ env.ECR_REPO }}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: |
          git config user.email "queeniearthur1@gmail.com"
          git config user.name "queeniearthur"

          echo " Updating frontend.yaml image to ${ECR_REGISTRY}/${ECR_REPO}:${IMAGE_TAG}"
          sed -i "s|image: .*|image: ${ECR_REGISTRY}/${ECR_REPO}:${IMAGE_TAG}|" ./bank-project/frontend.yaml

          git add ./bank-project/frontend.yaml
          git commit -m "Update frontend image to version ${IMAGE_TAG}" || echo "No changes to commit"
          git push origin main
