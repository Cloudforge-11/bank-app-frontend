
name: Bank Frontend Pipeline

on:
  push:
    branches:
      - main
  # pull_request:
  #   branches:
  #     - cicd

jobs:
  Continues-Integration_build_and_push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        repository: digitalwitchdemo/main_bank_app_frontend
        ref: main


    - name: Install nodejs
      run: |
        rm package-lock.json
        #  sudo apt-get update
        #  sudo apt-get install -y ca-certificates curl gnupg
        #  sudo mkdir -p /etc/apt/keyrings
        #  curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
        
        # NODE_MAJOR=18
        #  echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main" | sudo tee /etc/apt/sources.list.d/nodesource.list
        #  sudo apt-get update
        #  sudo apt-get install nodejs -y
        #  sudo apt-get install npm -y
         

    # - name: Npm Packaging application before dockerbuild
    #   run: |
    #      node -v 
    #      npm -v
    #      npm install --save react react-dom @types/react @types/react-dom
    #      npm install react-scripts@3.0.1  --save
    #      npm install
    #      npm install --save-dev @babel/plugin-proposal-private-property-in-object

    #      # Attempt to fix vulnerabilities, but continue if it fails
    #      RUN npm audit fix --force || echo "Continuing despite npm audit fix failures"

    - name: Build container image
      run: docker build -t ${{ secrets.REGISTRY_NAME }}/bank-app-frontend:${{ github.run_number }} .
    
    - name: Log in to Docker Registry with short-lived credentials
      run: docker login -u ${{ secrets.REGISTRY_NAME }} --password ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Push image to Docker Registry
      run: docker push ${{ secrets.REGISTRY_NAME }}/bank-app-frontend:${{ github.run_number }}


    - name: Clean up Docker image locally
      run: docker rmi ${{ secrets.REGISTRY_NAME }}/bank-app-frontend:${{ github.run_number }}

    - name: Clean up GitHub repo on runner
      run: rm -rf ./*

      
  Continues-Deployment:
    runs-on: ubuntu-latest
    needs: Continues-Integration_build_and_push
  
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Update the kubernetes Deployment file. 
        run: |
          cat deployment/deploy.yaml
          sed -i "s+supportcloud160/bank-app-frontend:.*+supportcloud160/bank-app-frontend:${{ github.run_number }}+g" deployment/deploy.yaml
          cat deployment/deploy.yaml
          
      - name: Authenticate to GCP
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS_JSON }}
        run: |
            echo "$GOOGLE_APPLICATION_CREDENTIALS" > gcp-key.json
            gcloud auth activate-service-account --key-file=gcp-key.json
            gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          

      - name: Installing the Google Kubernetes authentication plugin name gke-gcloud-auth-plugin
        run: |
              sudo apt-get update 
              sudo apt-get install apt-transport-https ca-certificates gnupg curl -y
              curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg
              echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
              sudo apt-get update && sudo apt-get install google-cloud-cli -y
              sudo apt-get install google-cloud-cli-gke-gcloud-auth-plugin -y


      - name: Configure kubectl for GKE
        run: |
                gcloud container clusters get-credentials dev-cluster --zone us-central1-a --project ${{ secrets.GCP_PROJECT_ID }}


      - name: Deploy Bank Frontend to Kubernetes
        run: |
            kubectl apply -f deployment
            kubectl get all